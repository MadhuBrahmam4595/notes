# Saving form data as timestamp without timezone in postgresql from html form
************************************************************************************
<input type="datetime-local" step="1" name="application_from_date" value="<%=application_from_date%>"/><span style="color: red;">* MM/dd/YYYY HH:mm:SS</span>

  <%@page import="java.sql.Timestamp"%>
<%@page import="java.text.SimpleDateFormat"%>
  String application_from_date = request.getParameter("application_from_date").replace("T", " "); System.out.println("application_from_date=>"+application_from_date);
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-mm-dd hh:mm:ss");
        java.util.Date application_from_datedate = sdf.parse(application_from_date);
        Timestamp saveapplication_from_date = new java.sql.Timestamp(application_from_datedate.getTime());
        System.out.println("saveapplication_from_date=>"+saveapplication_from_date);

preparedStatement2.setTimestamp(5, saveapplication_from_date);
=========================================================================
Export to excel logic :
function exportToExcel() {
	    // Get the table element
	    var table = document.getElementById("tableContent");

	    // Generate an array of arrays representing the table data
	    var data = [
	        Array.from(table.querySelectorAll("thead th")).map(th => th.innerText.trim()), // Headers
	        ...Array.from(table.querySelectorAll("tbody tr")).map(row =>
	            Array.from(row.querySelectorAll("td")).map(td => td.innerText.trim())
	        ),
	    ];

	    // Create a worksheet
	    var ws = XLSX.utils.aoa_to_sheet(data);

	    // Create a workbook
	    var wb = XLSX.utils.book_new();
	    XLSX.utils.book_append_sheet(wb, ws, "Sheet1");

	    // Save the workbook to an Excel file
	    XLSX.writeFile(wb, "table_data.xlsx");
	}
